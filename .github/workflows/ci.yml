name: GitHub CI

on:
  push:
    branches: ['**']
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.architecture == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}

    env:
      CC: ${{ matrix.compiler }}
      GCC_VER: 14
      CLANG_VER: 20
      TEST: test
      SRCDIR: ./src
      LEAK_CFLAGS: -DEXITFREE
      LOG_DIR: ${{ github.workspace }}/logs
      TERM: xterm
      DISPLAY: ':99'
      DEBIAN_FRONTEND: noninteractive

    strategy:
      fail-fast: false
      matrix:
        include:
          - features: normal
            shadow: ./src/shadow
            compiler: gcc
            architecture: i386

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Filelist
        run: make -f ci/unlisted.make

      - name: Check hlgroups
        run: make -C ci -f hlgroups.make

      - if: matrix.architecture == 'i386'
        run: sudo dpkg --add-architecture i386

      - name: Uninstall snap
        run: sudo bash ci/remove_snap.sh

      - name: Enable debug packages
        run: |
          sudo apt install -y ubuntu-dbgsym-keyring
          sudo cp ci/ddebs.list /etc/apt/sources.list.d/ddebs.list
          sudo cp ci/pinned-pkgs /etc/apt/preferences.d/pinned-pkgs

      - name: Install packages
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
            PKGS=(gettext x11-utils labwc wl-clipboard wayland-utils \
                  libgtk-3-dev:${{ matrix.architecture }} libgtk-3-bin:${{ matrix.architecture }} \
                  desktop-file-utils libc6-dbgsym:${{ matrix.architecture }} libtool-bin \
                  libncurses-dev:${{ matrix.architecture }} libxt-dev:${{ matrix.architecture }} \
                  libegl-mesa0:${{ matrix.architecture }} libegl1:${{ matrix.architecture }} \
                  libegl1-mesa-dev:${{ matrix.architecture }} libepoxy-dev:${{ matrix.architecture }} \
                  libwayland-egl1:${{ matrix.architecture }} libwayland-client0:${{ matrix.architecture }} \
                  libwayland-cursor0:${{ matrix.architecture }} locales-all software-properties-common)
            sudo apt-get update -y
            sudo apt-get upgrade -y --allow-downgrades
            sudo apt-get install -y --allow-downgrades "${PKGS[@]}"

      - name: Install gcc-${{ env.GCC_VER }}
        if: matrix.compiler == 'gcc'
        run: |
          sudo apt-get install -y gcc-${{ env.GCC_VER }}:${{ matrix.architecture }}
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ env.GCC_VER }} 100
          sudo update-alternatives --set gcc /usr/bin/gcc-${{ env.GCC_VER }}

      - name: Set up environment
        run: |
          mkdir -p "${LOG_DIR}" "${HOME}/bin"
          echo "${HOME}/bin" >> "$GITHUB_PATH"
          {
            echo "LINUX_VERSION=$(uname -r)"
            echo "NPROC=$(getconf _NPROCESSORS_ONLN)"
            echo "TMPDIR=$(mktemp -d -p /tmp)"
            echo "TEST=test"
            echo "CONFOPT="
          } >> "$GITHUB_ENV"

      - name: Set up system
        run: |
          sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=0
          sudo usermod -a -G audio "$USER"
          sudo bash ci/setup-xvfb.sh

      - name: Create shadow dir
        if: matrix.shadow
        run: |
          make -C src shadow
          echo "SRCDIR=${{ matrix.shadow }}" >> "$GITHUB_ENV"
          echo "SHADOWOPT=-C ${{ matrix.shadow }}" >> "$GITHUB_ENV"

      - name: Configure
        run: |
          ./configure --with-features=${{ matrix.features }} ${CONFOPT} --enable-fail-if-missing
          sed -i -f ci/config.mk.sed ${SRCDIR}/auto/config.mk
          sed -i -f ci/config.mk.${CC}.sed ${SRCDIR}/auto/config.mk

      - name: Rebuild shadow clean (force fresh objects)
        if: matrix.shadow
        run: |
          rm -rf src/shadow
          make -C src shadow
          echo "SRCDIR=${{ matrix.shadow }}" >> "$GITHUB_ENV"

      - name: Build (debug)
        run: |
          make ${SHADOWOPT} distclean || true
          make ${SHADOWOPT} CFLAGS="-g -O0" -j${NPROC}
          file "${SRCDIR}/vim"

      - name: Debug vim --version (inspect buf)
        continue-on-error: true
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gdb
          gdb --batch --nx \
            -ex "set pagination off" \
            -ex "break save_file_ff" \
            -ex "run" \
            -ex "bt" \
            -ex "print buf" \
            -ex "ptype *buf" \
            -ex "info locals" \
            -ex "x/32wx buf" \
            -ex "print buf->b_p_ff" \
            --args "${SRCDIR}/vim" --version > gdb_inspect.log 2>&1 || true
          sed -n '1,160p' gdb_inspect.log

      - if: ${{ !cancelled() }}
        uses: ./.github/actions/test_artifacts
